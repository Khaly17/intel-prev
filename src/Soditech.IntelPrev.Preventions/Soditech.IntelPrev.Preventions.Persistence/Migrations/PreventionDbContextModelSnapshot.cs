// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soditech.IntelPrev.Preventions.Persistence;

#nullable disable

namespace Soditech.IntelPrev.Preventions.Persistence.Migrations;

[DbContext(typeof(PreventionDbContext))]
partial class PreventionDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasDefaultSchema("preventions")
            .HasAnnotation("ProductVersion", "8.0.8")
            .HasAnnotation("Proxies:ChangeTracking", false)
            .HasAnnotation("Proxies:CheckEquality", false)
            .HasAnnotation("Proxies:LazyLoading", true)
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Building", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Address")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<bool>("HasDAE")
                    .HasColumnType("bit");

                b.Property<bool>("HasFirstAidKits")
                    .HasColumnType("bit");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<int>("NumberOfFloors")
                    .HasColumnType("int");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Buildings", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Campaign", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTimeOffset>("EndDate")
                    .HasColumnType("datetimeoffset");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTimeOffset>("StartDate")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Campaigns", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.CommitteeMember", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("nvarchar(20)");

                b.Property<string>("Roles")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("CommitteeMembers", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Equipment", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("BuildingId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<Guid?>("FloorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("GeoLocationId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<DateTimeOffset>("LastInspectionDate")
                    .HasColumnType("datetimeoffset");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTimeOffset>("NextInspectionDate")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Type")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("BuildingId");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("FloorId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Equipments", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Event", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTimeOffset>("EndDate")
                    .HasColumnType("datetimeoffset");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Location")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<Guid>("OrganizerId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset>("StartDate")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("OrganizerId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Events", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.FireSecuritySettings", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("DefinitionContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("EvacuationCaseContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FireConsignsContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FireMaterialsContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FireSecurityServiceContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDefault")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("KnownMyEnterpriseContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("FireSecuritySettings", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("BuildingId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<int>("Number")
                    .HasMaxLength(100)
                    .HasColumnType("int");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("BuildingId");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Floors", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.GatheringPoint", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("BuildingId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("FloorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("GeoLocationId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("BuildingId");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("FloorId");

                b.HasIndex("GeoLocationId")
                    .IsUnique()
                    .HasFilter("[GeoLocationId] IS NOT NULL");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("GatheringPoints", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.GeoLocation", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<double?>("Altitude")
                    .HasColumnType("float");

                b.Property<Guid>("BuildingId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("EquipmentId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("FloorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid?>("GatheringPointId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<double>("Latitude")
                    .HasColumnType("float");

                b.Property<double>("Longitude")
                    .HasColumnType("float");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Type")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("BuildingId");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("EquipmentId")
                    .IsUnique()
                    .HasFilter("[EquipmentId] IS NOT NULL");

                b.HasIndex("FloorId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("GeoLocations", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.MedicalContact", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("PhoneNumber")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("nvarchar(20)");

                b.Property<string>("Position")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("MedicalContacts", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.PreventionSettings", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("DefinitionContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDefault")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("SensibilisationContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("PreventionSettings", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.ProPrevSettings", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("ActionsOrganizerContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("AnalysisToolsContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CseAgendaContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("DataSheetContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("EpiControlContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FirstAidKitContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("HealthFormationContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsDefault")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("MyLibraryContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("RiskAnalysisProtocolContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("SecurityQuarterContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("SitesVisitContent")
                    .IsRequired()
                    .HasMaxLength(10000)
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("ProPrevSettings", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.StaticContent", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Content")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Key")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("StaticContents", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Statistic", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("CampaignId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Category")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<DateTimeOffset?>("CreatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("CreatorId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset>("Date")
                    .HasColumnType("datetimeoffset");

                b.Property<DateTimeOffset?>("DeletedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("DeleterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Notes")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<Guid>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTimeOffset?>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid?>("UpdaterId")
                    .HasColumnType("uniqueidentifier");

                b.Property<float>("Value")
                    .HasColumnType("real");

                b.HasKey("Id");

                b.HasIndex("CampaignId");

                b.HasIndex("CreatorId");

                b.HasIndex("DeleterId");

                b.HasIndex("TenantId");

                b.HasIndex("UpdaterId");

                b.ToTable("Statistics", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("DisplayName")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<bool>("IsActive")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(true);

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.HasKey("Id");

                b.ToTable("Tenants", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<bool>("IsDeleted")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<Guid?>("TenantId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnType("nvarchar(150)");

                b.HasKey("Id");

                b.HasIndex("TenantId");

                b.ToTable("Users", "preventions");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Building", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Campaign", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.CommitteeMember", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Equipment", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Building", "Building")
                    .WithMany("Equipments")
                    .HasForeignKey("BuildingId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", "Floor")
                    .WithMany("Equipments")
                    .HasForeignKey("FloorId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Building");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Floor");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Event", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.CommitteeMember", "Organizer")
                    .WithMany()
                    .HasForeignKey("OrganizerId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Organizer");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.FireSecuritySettings", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Building", "Building")
                    .WithMany("Floors")
                    .HasForeignKey("BuildingId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Building");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.GatheringPoint", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Building", "Building")
                    .WithMany("GatheringPoints")
                    .HasForeignKey("BuildingId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", "Floor")
                    .WithMany("GatheringPoints")
                    .HasForeignKey("FloorId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.GeoLocation", "GeoLocation")
                    .WithOne("GatheringPoint")
                    .HasForeignKey("Soditech.IntelPrev.Preventions.Persistence.Models.GatheringPoint", "GeoLocationId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Building");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Floor");

                b.Navigation("GeoLocation");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.GeoLocation", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Building", "Building")
                    .WithMany("GeoLocations")
                    .HasForeignKey("BuildingId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Equipment", "Equipment")
                    .WithOne("GeoLocation")
                    .HasForeignKey("Soditech.IntelPrev.Preventions.Persistence.Models.GeoLocation", "EquipmentId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", "Floor")
                    .WithMany("GeoLocations")
                    .HasForeignKey("FloorId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Building");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Equipment");

                b.Navigation("Floor");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.MedicalContact", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.PreventionSettings", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.ProPrevSettings", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.StaticContent", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Statistic", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Campaign", "Campaign")
                    .WithMany()
                    .HasForeignKey("CampaignId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Creator")
                    .WithMany()
                    .HasForeignKey("CreatorId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Deleter")
                    .WithMany()
                    .HasForeignKey("DeleterId");

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction)
                    .IsRequired();

                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.User", "Updater")
                    .WithMany()
                    .HasForeignKey("UpdaterId");

                b.Navigation("Campaign");

                b.Navigation("Creator");

                b.Navigation("Deleter");

                b.Navigation("Tenant");

                b.Navigation("Updater");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.User", b =>
            {
                b.HasOne("Soditech.IntelPrev.Preventions.Persistence.Models.Tenant", "Tenant")
                    .WithMany()
                    .HasForeignKey("TenantId")
                    .OnDelete(DeleteBehavior.NoAction);

                b.Navigation("Tenant");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Building", b =>
            {
                b.Navigation("Equipments");

                b.Navigation("Floors");

                b.Navigation("GatheringPoints");

                b.Navigation("GeoLocations");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Equipment", b =>
            {
                b.Navigation("GeoLocation");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.Floor", b =>
            {
                b.Navigation("Equipments");

                b.Navigation("GatheringPoints");

                b.Navigation("GeoLocations");
            });

        modelBuilder.Entity("Soditech.IntelPrev.Preventions.Persistence.Models.GeoLocation", b =>
            {
                b.Navigation("GatheringPoint");
            });
#pragma warning restore 612, 618
    }
}

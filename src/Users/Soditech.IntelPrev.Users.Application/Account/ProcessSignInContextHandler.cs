using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using OpenIddict.Abstractions;
using OpenIddict.Server;

namespace Soditech.IntelPrev.Users.Application.Account;

public class ProcessSignInContextHandler : IOpenIddictServerHandler<OpenIddictServerEvents.ProcessSignInContext>
{
    public ValueTask  HandleAsync(OpenIddictServerEvents.ProcessSignInContext context)
    {
        Debug.Assert(context.Principal is not null);

        // get scopes requested by the client
        var scopes = context.Request.GetScopes()
            .Union([OpenIddictConstants.Scopes.OfflineAccess]);
        context.Principal.SetScopes(scopes);
        
        // Allow OpenIddict to store all the claims generated by ASP.NET Core Identity in the access tokens.
        context.Principal.SetDestinations( _ => [OpenIddictConstants.Destinations.AccessToken]);

        return ValueTask.CompletedTask;
    }
    
}